MIT License

Copyright (c) 2025 Fialucci

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
# Fialucci Org Website

Modern React + Vite + TypeScript starter for the Fialucci organization website.

![React](https://img.shields.io/badge/React-18-61dafb?logo=react) ![Vite](https://img.shields.io/badge/Vite-5-646cff?logo=vite) ![TypeScript](https://img.shields.io/badge/TypeScript-5-3178c6?logo=typescript)

## ✨ Features

- ⚡ Vite 5 for ultra-fast dev & optimized builds
- 🧩 React 18 with modern JSX transform
- 🛡️ TypeScript strict mode
- ✅ Testing with Vitest + Testing Library
- 🔍 ESLint (TypeScript rules) & Prettier formatting
- ♻️ React Refresh (fast HMR)
- 🚀 Deployment script to GitHub Pages (`npm run deploy`)
- 📝 EditorConfig & sensible .gitignore

## 📦 Tech Stack

| Layer        | Tool |
|--------------|------|
| Build / Dev  | Vite |
| Language     | TypeScript (ES2022 modules) |
| UI Library   | React 18 |
| Testing      | Vitest + @testing-library/react |
| Linting      | ESLint (@typescript-eslint) |
| Formatting   | Prettier |
| Deployment   | gh-pages |

## 🔧 Scripts

| Command | Description |
|---------|-------------|
| `npm run dev` | Start local dev server with HMR |
| `npm run build` | Type-check then build production bundle into `dist/` |
| `npm run preview` | Preview the production build locally |
| `npm run test` | Run test suite once |
| `npm run test:watch` | Run tests in watch (interactive) mode |
| `npm run lint` | Lint all TypeScript/TSX files |
| `npm run format` | Format codebase with Prettier |
| `npm run deploy` | Build and publish `dist/` to GitHub Pages |

## 🚀 Getting Started

```bash
# Install dependencies
npm install

# Start dev server
npm run dev

# Run tests
npm test

# Lint & type-check
npm run lint

# Build for production
npm run build

# Deploy to GitHub Pages (ensure repo has pages configured)
npm run deploy
```

Then open `http://localhost:5173` (default Vite port) during development.

## 🗂 Project Structure

```
├── src/
│   ├── App.tsx          # Root component
│   ├── App.test.tsx     # Example test
│   ├── main.tsx         # Entry point
│   ├── index.css        # Global styles
│   └── ...              # Your features/components
├── vite.config.ts       # Vite & Vitest config
├── tsconfig.json        # TypeScript configuration
├── setupTests.ts        # Test environment setup
├── .eslintrc.cjs        # ESLint rules
├── package.json         # Dependencies & scripts
├── README.md            # Documentation
└── .editorconfig        # Editor consistency
```

## 🧪 Testing

Tests use [Vitest](https://vitest.dev) with jsdom and Testing Library for React component assertions.
Write tests alongside components as `ComponentName.test.tsx` inside `src/`.

Example:
```tsx
import { render, screen } from '@testing-library/react';
import App from './App';

test('renders title', () => {
  render(<App />);
  expect(screen.getByRole('heading', { name: /fialucci org website/i })).toBeVisible();
});
```

Run them:
```bash
npm test
```

## 🧩 Environment Requirements

- Node.js >= 18.18.0 (LTS recommended)
- npm >= 9

## 🛠 Customization Ideas

- Add routing (e.g. `react-router-dom`)
- Add state management (Zustand, Redux Toolkit, Recoil)
- Add CSS framework (Tailwind, Mantine, MUI)
- Configure CI (GitHub Actions for lint/test/build)
- Add accessibility & performance checks (Lighthouse CI)

## 🤝 Contributing

1. Fork the repo
2. Create a feature branch: `git checkout -b feat/awesome`
3. Commit changes: `git commit -m "feat: add awesome"`
4. Push: `git push origin feat/awesome`
5. Open a Pull Request

### Code Style

- Use TypeScript for new code
- Prefer functional components & hooks
- Keep components small and focused
- Write tests for new features
- Run `npm run lint` and `npm run format` before pushing

### Commit Convention

Follow [Conventional Commits](https://www.conventionalcommits.org/) (e.g. `feat:`, `fix:`, `docs:`).

## 📄 License

Licensed under the MIT License. See [LICENSE](./LICENSE).

## 📣 Acknowledgements

Built with love using React, Vite, and the open source ecosystem.

